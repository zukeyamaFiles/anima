html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

html {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

q, blockquote {
  quotes: none;
}
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

a img {
  border: none;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block;
}

.cf:before,
.cf:after {
  content: " ";
  display: table;
}

.cf:after {
  clear: both;
}

.cf {
  *zoom: 1;
}

html, body {
  height: 100%;
  width: 100%;
  overflow: hidden;
  -webkit-perspective: 1200px;
  -moz-perspective: 1200px;
  -ms-perspective: 1200px;
  perspective: 1200px;
}

#wrap {
  width: 100%;
  height: 500px;
  background: #000;
  -webkit-display: flex;
  display: flex;
  -webkit-justify-content: center;
  /* Safari */
  justify-content: center;
  -webkit-align-items: center;
  /* Safari */
  align-items: center;
  -webkit-transition: flex-direction 1s;
  -moz-transition: flex-direction 1s;
  -ms-transition: flex-direction 1s;
  transition: flex-direction 1s;
}

#wrap.add {
  flex-direction: row;
}

.box {
  margin-top: 20px;
  width: 20%;
  background: green;
  height: 200px;
  -webkit-transition: order 1s;
  -moz-transition: order 1s;
  -ms-transition: order 1s;
  transition: order 1s;
}

.box:first-child {
  background: green;
}

.box:nth-child(2) {
  background: red;
}

.box:nth-child(3) {
  background: blue;
}

.box:nth-child(4) {
  background: pink;
}

.add {
  order: 1;
}



/*# sourceMappingURL=data:application/json;base64, */
